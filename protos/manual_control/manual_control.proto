syntax = "proto3";

package mavsdk.rpc.manual_control;

option java_package = "io.mavsdk.manual_control";
option java_outer_classname = "ManualControlProto";

service ManualControlService
{
     /*
     * Send command to enable Joystick mode 
     * Enabling Joystic mode causes to change into Position Control mode
     * drone still needs to be armed
     * Needs to check if the drone is not currently flying or in mission if so drone needs to be paused first 
     */
    rpc StartPositionControl (PositionControlRequest)  returns(PositionControlResponse) {}
    rpc StartAltitudeControl (AltitudeControlRequest)  returns(AltitudeControlResponse) {}
     /*
     * Send command to command to the drone to move forwards or backwards 
     */
    rpc ManualControlInput (ManualControlRequest) returns (ManualControlResponse) {}
}

message PositionControlRequest{}
message PositionControlResponse{
    ManualControlResult manual_control_result = 1;
}

message AltitudeControlRequest{}
message AltitudeControlResponse{
    ManualControlResult manual_control_result = 1;
}

message ManualControlRequest {
    float x = 1 ;                    // value between -1. to 1. negative-> backwards, positive-> forwards 
    float y = 2 ;                    // value between -1. to 1. negative-> left, positive--> right
    float z = 3 ;                    // value between -1. to 1. negative-> down ,positive--> up 
    float r = 4 ;                    // value between -1. to 1. negative-> ccw ,positive- -> cw  revolve aroun z-axis 
}
message ManualControlResponse{
    ManualControlResult  manual_control_result = 1  ;
}

message ManualControlResult {
    enum Result {

        RESULT_UNKNOWN = 0; // Unknown result
        RESULT_SUCCESS = 1; // Request was successful
        RESULT_NO_SYSTEM = 2; // No system is connected
        RESULT_CONNECTION_ERROR = 3; // Connection error
        RESULT_BUSY = 4; // Vehicle is busy
        RESULT_COMMAND_DENIED = 5; // Command refused by vehicle
        RESULT_TIMEOUT = 6; // Request timed out
    } 
    Result result = 1; // Result enum value
    string result_str = 2; // Human-readable English string describing the result
}






